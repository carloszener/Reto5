/*
 * Pueda usar esta plantilla para la carga del reto a iMaster
 * Copie las clases de los paquetes Modelo, Vista, Controlador y Util
 * No incluya los import de los archivos .java solo las clases
 */
// Importaciones necesarias en iMaster
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.io.File;

// Util (No modificar)
class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;

        return DriverManager.getConnection(url);
    }
}

// Remplace en adelante por las clases de sus archivos .java

// Vista

public class VistaRequerimientosReto4 {
    
    public static final ControladorRequerimientosReto4 controlador = new ControladorRequerimientosReto4();

    
    public static void requerimiento1(){
    
        System.out.println("*** Lideres por Salario ***");

        try{
            
            ArrayList<Requerimiento1> solicitud1 = controlador.consultarRequerimiento_1();

            for(Requerimiento1 consulta1: solicitud1){
                System.out.printf("El Lider %s %s con Id %d Tiene un salario de %d\n", 
                consulta1.getNombre(),
                consulta1.getPrimer_Apellido(),
                consulta1.getID_Lider(),
                consulta1.getSalario()
                );

            }

        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }
    }

    public static void requerimiento2(){     

        System.out.println("*** Proyectos por Tipo ***");

        try{
        
            ArrayList<Requerimiento2> solicitud2 = controlador.consultarRequerimiento_2();

            for(Requerimiento2 consulta2: solicitud2){
                System.out.printf("El proyecto con ID %d de la constructora: %s de la ciudad %s, tiene un estrato asignado igual a %d\n",
                consulta2.getID_Proyecto(),
                consulta2.getConstructora(),
                consulta2.getCiudad(),
                consulta2.getEstrato()
                );

            }

        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }
    }

    public static void requerimiento3(){
       
        System.out.println("*** Lideres por Nombre ***");

        try{
            
            ArrayList<Requerimiento3> solicitud3 = controlador.consultarRequerimiento_3();

            for(Requerimiento3 consulta3: solicitud3){
                System.out.printf("El Lider con Id %d se llama %s %s\n", 
                consulta3.getID_Lider(),
                consulta3.getNombre(),
                consulta3.getPrimer_Apellido()
                );

            }
        
        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }
    }

}

// Controlador

public class ControladorRequerimientosReto4 {       
    
    private final Requerimiento_1Dao DAO1;
    private final Requerimiento_2Dao DAO2;
    private final Requerimiento_3Dao DAO3; 
    
    public ControladorRequerimientosReto4(){
        
        this.DAO1 = new Requerimiento_1Dao();
        this.DAO2 = new Requerimiento_2Dao();
        this.DAO3 = new Requerimiento_3Dao(); 
    }

    public ArrayList<Requerimiento1> consultarRequerimiento_1() throws SQLException {

        return this.DAO1.requerimiento1(); 

    }
    
    public ArrayList<Requerimiento2> consultarRequerimiento_2() throws SQLException {
        
        return this.DAO2.requerimiento2(); 

    }

    public ArrayList<Requerimiento3> consultarRequerimiento_3() throws SQLException {
        
        return this.DAO3.requerimiento3();

    }

}


// Modelo
// VO
public class Requerimiento1 {
    
    //Atributos

    private Integer ID_Lider;
    private String Primer_Apellido;
    private String Nombre;
    private Integer Salario;

    //Setters
    
    public void setID_Lider(Integer iD_Lider) {
        ID_Lider = iD_Lider;
    }    

    public void setPrimer_Apellido(String primer_Apellido) {
        Primer_Apellido = primer_Apellido;
    }

    public void setNombre(String nombre) {
        Nombre = nombre;
    }
    
    public void setSalario(Integer salario) {
        Salario = salario;
    }

    //Getters

    public Integer getID_Lider() {
        return ID_Lider;
    }

    public String getPrimer_Apellido() {
        return Primer_Apellido;
    }

    public String getNombre() {
        return Nombre;
    }

    public Integer getSalario() {
        return Salario;
    }

}

public class Requerimiento2 {
    
    //Atributos

    private Integer ID_Proyecto;
    private String Constructora;
    private String Ciudad;
    private Integer Estrato;

    //Setters

    public void setID_Proyecto(Integer iD_Proyecto) {
        ID_Proyecto = iD_Proyecto;
    }

    public void setConstructora(String constructora) {
        Constructora = constructora;
    }
    
    public void setCiudad(String ciudad) {
        Ciudad = ciudad;
    }

    public void setEstrato(Integer estrato) {
        Estrato = estrato;
    }

    //Getters

    public Integer getID_Proyecto() {
        return ID_Proyecto;
    }

    public String getConstructora() {
        return Constructora;
    }

    public String getCiudad() {
        return Ciudad;
    }

    public Integer getEstrato() {
        return Estrato;
    }
    
}

public class Requerimiento3 {
    
    //Atributos
    
    private Integer ID_Lider;
    private String Nombre;
    private String Primer_Apellido;

    //Setters

    public void setID_Lider(Integer iD_Lider) {
        ID_Lider = iD_Lider;
    }

    public void setNombre(String nombre) {
        Nombre = nombre;
    }

    public void setPrimer_Apellido(String primer_Apellido) {
        Primer_Apellido = primer_Apellido;
    }

    //Getters

    public Integer getID_Lider() {
        return ID_Lider;
    }

    public String getNombre() {
        return Nombre;
    }

    public String getPrimer_Apellido() {
        return Primer_Apellido;
    }

}

// DAO

public class Requerimiento_1Dao {
    
    public ArrayList<Requerimiento1> requerimiento1() throws SQLException {

        // Consulta
        ArrayList<Requerimiento1> respuesta = new ArrayList<Requerimiento1>();
        Connection conexion = JDBCUtilities.getConnection();

    try{        
        
        String consulta = "SELECT Nombre, Primer_Apellido, ID_Lider, Salario " 
                        + "FROM Lider " 
                        + "WHERE Salario <= 500000 "
                        + "ORDER BY Salario "; 
        
        PreparedStatement estado = conexion.prepareStatement(consulta);
        ResultSet resultado = estado.executeQuery();

        while (resultado.next()){
            Requerimiento1 proceso = new Requerimiento1();
            proceso.setID_Lider(resultado.getInt("ID_Lider"));
            proceso.setPrimer_Apellido(resultado.getString("Primer_Apellido"));
            proceso.setNombre(resultado.getString("Nombre"));
            proceso.setSalario(resultado.getInt("Salario"));

            respuesta.add(proceso);
        
            }
        
            resultado.close();
            estado.close();
        
        }catch(SQLException e){
            System.err.println("Error consultando el Requerimiento1: "+e);
        }finally{
            if(conexion != null){
                conexion.close();
            }
        }

        return respuesta;
    
    }

}

public class Requerimiento_2Dao {
   
    public ArrayList<Requerimiento2> requerimiento2() throws SQLException {
        
        //Consulta
        ArrayList<Requerimiento2> respuesta = new ArrayList<Requerimiento2>();
        Connection conexion = JDBCUtilities.getConnection();

    try{        
        
        String consulta = "SELECT ID_Proyecto, Constructora, Ciudad, Estrato " 
                        + "FROM Proyecto " 
                        + "NATURAL JOIN Tipo "
                        + "WHERE Ciudad = 'Cartagena' " 
                        + "ORDER BY Estrato ";
        
        PreparedStatement estado = conexion.prepareStatement(consulta);
        ResultSet resultado = estado.executeQuery();

        while (resultado.next()){
            Requerimiento2 proceso = new Requerimiento2();
            proceso.setID_Proyecto(resultado.getInt("ID_Proyecto"));
            proceso.setConstructora(resultado.getString("Constructora"));
            proceso.setCiudad(resultado.getString("Ciudad"));
            proceso.setEstrato(resultado.getInt("Estrato"));

            respuesta.add(proceso);
        
            }
        
            resultado.close();
            estado.close();
        
        }catch(SQLException e){
            System.err.println("Error consultando el Requerimiento2: "+e);
        }finally{
            if(conexion != null){
                conexion.close();
            }
        }

        return respuesta;



    }
        
}

public class Requerimiento_3Dao {
   
    public ArrayList<Requerimiento3> requerimiento3() throws SQLException {
        
        //Consulta
        ArrayList<Requerimiento3> respuesta = new ArrayList<Requerimiento3>();
        Connection conexion = JDBCUtilities.getConnection();

    try{        
        
        String consulta = "SELECT ID_Lider, Nombre, Primer_Apellido " 
                        + "FROM Lider " 
                        + "WHERE Primer_Apellido "
                        + "LIKE '%z' ORDER BY Nombre "; 
        
        PreparedStatement estado = conexion.prepareStatement(consulta);
        ResultSet resultado = estado.executeQuery();

        while (resultado.next()){
            Requerimiento3 proceso = new Requerimiento3();
            proceso.setID_Lider(resultado.getInt("ID_Lider"));
            proceso.setNombre(resultado.getString("Nombre"));
            proceso.setPrimer_Apellido(resultado.getString("Primer_Apellido"));            

            respuesta.add(proceso);
        
            }
        
            resultado.close();
            estado.close();
        
        }catch(SQLException e){
            System.err.println("Error consultando el Requerimiento3: "+e);
        }finally{
            if(conexion != null){
                conexion.close();
            }
        }


        return respuesta;



    }
        
}



